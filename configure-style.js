var lessMiddleware = require('less-middleware');

module.exports = function (app) {

    (function (fs) {//rename .css to .less
        fs.readdirSync('./style/source/highlighter-styles').forEach(function (file) {
            if (/\.css$/g.test(file)) {
                var path = './style/source/highlighter-styles/' + file;
                fs.renameSync(path, path.replace(/\.css$/g, '.less'));
            }
        });
    }(require('fs')));
    (function (fs) {//build highlighter .less file
        var names = [];
        fs.readdirSync('./style/source/highlighter-styles').forEach(function (file) {
            if (/\.less$/g.test(file)) {
                names.push(file.replace(/\.less$/g, ''));
            }
        });
        var source = '//This file is generated by configure-style.js, do not edit.\n' + 
        names.map(function (name) {
            return  ['.highlight-' + name + ' {',
                    '    @import "highlighter-styles/' + name + '.less";',
                    '}'].join('\n');
        }).join('\n');
        fs.unlinkSync('./style/source/highlight.less');
        fs.writeFileSync('./style/source/highlight.less', source);
        app.locals.use(function (req, res) {
            res.locals.highlightThemes = names;
            res.locals.highlightThemeSelected = 'default';
        });
    }(require('fs')));

    var debug = false;
    if (debug) {
        app.use('/css', lessMiddleware({
            src: __dirname + '/style/source',
            dest: __dirname + '/style/output',
            force: true,
            debug: true
            //compress: false,
        }));
    } else {
        app.use('/css', lessMiddleware({
            src: __dirname + '/style/source',
            dest: __dirname + '/style/output',
            compress: true,
            once: true,
            optimization: 2
        }));
    }
    app.use('/css', require('express').static(__dirname + '/style/output'));
    app.use('/img/', require('express').static(__dirname + '/style/images'));
};